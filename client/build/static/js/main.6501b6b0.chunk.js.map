{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/index.js","redux/reducers/loggedInReducer.js","redux/reducers/userDataReducer.js","api/request.js","api/auth.api.js","redux/actions/apiStatusActions.js","api/checkAuthorization.js","redux/actions/authActions.js","images/admin-img.png","images/user-img.png","components/Spinner.js","pages/Profile.js","pages/Login.js","pages/Signup.js","components/Header.js","App.js","routes.js","index.js","redux/configureStore.js"],"names":["LOGIN_SUCCESS","LOGOUT_OPTIMISTIC","BEGIN_API_CALL","API_CALL_ERROR","initialState","loggedIn","userData","apiCallsInProgress","actionTypeEndsInSuccess","type","substring","length","rootReducer","combineReducers","state","action","types","user","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","signup","console","error","login","token","userId","localStorage","setItem","beginApiCall","apiCallError","checkToken","Authorization","signupSuccess","loginSuccess","checkAuthSuccess","logoutAction","dispatch","removeItem","Spinner","className","mapDispatchToProps","checkAuthAction","connect","loading","props","useState","setUserData","useEffect","then","catch","err","firstName","lastName","email","isAdmin","src","adminImg","alt","userImg","loginAction","errors","errorsMsgs","map","msg","join","password","form","setForm","handleInputChange","event","value","target","name","onSubmit","e","preventDefault","res","toast","success","split","forEach","finally","onChange","Signup","repeatPassword","role","bind","handleSelect","sendReq","this","setState","signupAction","history","push","to","React","Component","withRouter","Header","loggedInFlag","onClick","handleClick","routes","path","exact","autoClose","hideProgressBar","parse","getItem","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6501b6b0.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const CHECKAUTH_SUCCESS = \"CHECKAUTH_SUCCESS\";\r\nexport const LOGOUT_OPTIMISTIC = \"LOGOUT_OPTIMISTIC\";\r\nexport const BEGIN_API_CALL = \"BEGIN_API_CALL\";\r\nexport const API_CALL_ERROR = \"API_CALL_ERROR\";\r\n","const initialState = { loggedIn: false, userData: null, apiCallsInProgress: 0 };\r\n\r\nexport default initialState;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\n// Все API запросы перед отправкой на сервер вызывают экшн для этого редьюсера.\r\n// Каждый запрос прибавляет +1 к св-ву apiCallsInProgress.\r\n// По завершению запроса (успешно или ошибкой) - вычитает -1.\r\n// Т.о. пока apiCallsInProgress > 0 (пока идет получение данных с сервера), можно крутить спиннер.\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n  return type.substring(type.length - 8) === \"_SUCCESS\";\r\n}\r\n\r\nexport default function apiCallStatusReducer(\r\n  state = initialState.apiCallsInProgress,\r\n  action\r\n) {\r\n  if (action.type === types.BEGIN_API_CALL) {\r\n    return state + 1;\r\n  } else if (\r\n    action.type === types.API_CALL_ERROR ||\r\n    actionTypeEndsInSuccess(action.type)\r\n  ) {\r\n    return state - 1;\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport loggedIn from \"./loggedInReducer\";\r\nimport userData from \"./userDataReducer\";\r\nimport apiCallsInProgress from \"./apiStatusReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  loggedIn,\r\n  userData,\r\n  apiCallsInProgress,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function loggedInReducer(state = initialState.loggedIn, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return true;\r\n    case types.LOGOUT_OPTIMISTIC:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function userDataReducer(state = initialState.userData, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return action.user;\r\n    case types.LOGOUT_OPTIMISTIC:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export async function request(url, method = \"GET\", body = null, headers = {}) {\r\n  try {\r\n    if (body) {\r\n      body = JSON.stringify(body);\r\n      headers[\"Content-type\"] = \"application/json\";\r\n    }\r\n    const response = await fetch(url, { method, body, headers });\r\n    const data = await response.json();\r\n    data.ok = response.ok;\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error.message, \" Что-то пошло не так.\");\r\n  }\r\n}\r\n","import { request } from \"./request\";\n\nexport const signup = async (user) => {\n  try {\n    const data = await request(\"/api/auth/signup\", \"POST\", user);\n    return data;\n  } catch (error) {\n    console.error(`Ошибка при регистрации ${error.message}`);\n  }\n};\n\nexport const login = async (user) => {\n  try {\n    const data = await request(\"/api/auth/login\", \"POST\", user);\n\n    if (data.token && data.userId && data.ok) {\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({ userId: data.userId, token: data.token })\n      );\n      return data;\n    }\n    return data;\n  } catch (error) {\n    console.error(`Ошибка при попытке входа в систему ${error.message}`);\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"userData\");\n};\n","import * as types from \"./actionTypes\";\r\n\r\nexport function beginApiCall() {\r\n  return { type: types.BEGIN_API_CALL };\r\n}\r\n\r\nexport function apiCallError() {\r\n  return { type: types.API_CALL_ERROR };\r\n}\r\n","import { request } from \"./request\";\r\n\r\nexport async function checkToken(token) {\r\n  try {\r\n    const data = await request(\"/api/profile\", \"GET\", null, {\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    if (data.ok) {\r\n      return data;\r\n    } else {\r\n      throw Error(\"Вы не автоизованы. Войдите в систему\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import * as types from \"./actionTypes\";\nimport { login, logout, signup } from \"../../api/auth.api\";\nimport { beginApiCall, apiCallError } from \"../actions/apiStatusActions\";\nimport { checkToken } from \"../../api/checkAuthorization\";\n\nfunction signupSuccess(data) {\n  return { type: types.SIGNUP_SUCCESS, data };\n}\n\nfunction loginSuccess(user) {\n  return { type: types.LOGIN_SUCCESS, user };\n}\n\nfunction logoutSuccess() {\n  return { type: types.LOGOUT_OPTIMISTIC };\n}\n\nfunction checkAuthSuccess(userData) {\n  return { type: types.CHECKAUTH_SUCCESS, userData };\n}\n\nexport function checkAuthAction(token) {\n  return async (dispatch) => {\n    dispatch(beginApiCall());\n    const userData = await checkToken(token);\n    if (userData) {\n      return dispatch(checkAuthSuccess(userData));\n    } else {\n      throw Error(\"Вы не автоизованы. Войдите в систему\");\n    }\n  };\n}\n\nexport function signupAction(user) {\n  return async (dispatch) => {\n    try {\n      dispatch(beginApiCall());\n      const data = await signup(user);\n      if (data.ok) {\n        return dispatch(signupSuccess(data));\n      } else {\n        if (data.errors) {\n          // Массив errors создает биб-ка express-validator в случае если введенные данные не валидны.\n          const errorsMsgs = data.errors.map((err) => err.msg);\n          throw new Error(errorsMsgs.join(\", \"));\n        } else {\n          throw new Error(data.message); // Свои ошибки (напр. \"Пользователь с таким email существует.\")\n        }\n      }\n    } catch (error) {\n      dispatch(apiCallError());\n      throw new Error(error.message);\n    }\n  };\n}\n\nexport function loginAction(user) {\n  return async (dispatch) => {\n    try {\n      dispatch(beginApiCall());\n      const data = await login(user);\n      if (data.ok) {\n        return dispatch(loginSuccess(data));\n      } else {\n        if (data.errors) {\n          // Массив errors создает биб-ка express-validator в случае если введенные данные не валидны.\n          const errorsMsgs = data.errors.map((err) => err.msg);\n          throw new Error(errorsMsgs.join(\", \"));\n        } else {\n          throw new Error(data.message); // Свои ошибки (напр. \"Пользователь с таким email существует.\")\n        }\n      }\n    } catch (error) {\n      dispatch(apiCallError());\n      throw new Error(error.message);\n    }\n  };\n}\n\nexport function logoutAction() {\n  return (dispatch) => {\n    logout();\n    return dispatch(logoutSuccess());\n  };\n}\n","export default __webpack_public_path__ + \"static/media/admin-img.54866eab.png\";","export default __webpack_public_path__ + \"static/media/user-img.e582e4ba.png\";","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\">Loading...</div>;\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutAction, checkAuthAction } from \"../redux/actions/authActions\";\r\nimport adminImg from \"../images/admin-img.png\";\r\nimport userImg from \"../images/user-img.png\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Profile = (props) => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    props\r\n      .checkAuthAction(props.token)\r\n      .then((data) => {\r\n        if (!data.userData.ok) {\r\n          props.logoutAction();\r\n        }\r\n        setUserData(data.userData);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {props.loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"profile-container\">\r\n          <h1>Личный кабинет</h1>\r\n          <div className=\"profile-container__text-container\">\r\n            <h2 className=\"profile-container__subtitle\">Ваши данные</h2>\r\n            <ul className=\"profile-container__list\">\r\n              <li>\r\n                <span>Имя: {userData.firstName}</span>\r\n              </li>\r\n              <li>Фамилия: {userData.lastName}</li>\r\n              <li>Email: {userData.email}</li>\r\n            </ul>\r\n          </div>\r\n          {userData.isAdmin ? (\r\n            <div className=\"img-wrapper\">\r\n              <img\r\n                className=\"img-wrapper__img\"\r\n                src={adminImg}\r\n                alt=\"Картинка админа\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"img-wrapper\">\r\n              <img\r\n                className=\"img-wrapper__img\"\r\n                src={userImg}\r\n                alt=\"Картинка пользователя\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    token: state.userData.token,\r\n    loggedIn: state.loggedIn,\r\n    loading: state.apiCallsInProgress > 0,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logoutAction,\r\n  checkAuthAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginAction } from \"../redux/actions/authActions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Login = (props) => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  function handleInputChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function sendReq(e) {\r\n    e.preventDefault();\r\n    props\r\n      .loginAction(form)\r\n      .then((res) => {\r\n        if (res.user.ok) {\r\n          return toast.success(res.user.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err.message);\r\n        err.message.split(\", \").forEach((err) => toast.error(err));\r\n      })\r\n      .finally(() => setForm({ email: \"\", password: \"\" }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"page-title\">Войти</h1>\r\n          <form className=\"form form_login\" onSubmit={sendReq}>\r\n            <label className=\"label\">\r\n              Email\r\n              <input\r\n                className=\"input\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n\r\n            <label className=\"label\">\r\n              Пароль\r\n              <input\r\n                className=\"input\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n            {/* <button onClick={sendReq} type=\"button\" className=\"btn\">\r\n              Войти\r\n            </button> */}\r\n            <button type=\"submit\" className=\"btn\">\r\n              Войти\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loading: state.apiCallsInProgress > 0,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signupAction } from \"../redux/actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst initialLocalState = () => {\r\n  return {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    role: \"user\",\r\n    isAdmin: false,\r\n  };\r\n};\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialLocalState();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.sendReq = this.sendReq.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSelect(event) {\r\n    this.setState({ role: event.target.value });\r\n    this.setState({ isAdmin: event.target.value === \"admin\" ? true : false });\r\n  }\r\n\r\n  async sendReq(e) {\r\n    e.preventDefault();\r\n    if (this.state.password !== this.state.repeatPassword) {\r\n      return toast.error(\"Пароли не совпадают.\");\r\n    }\r\n    const { firstName, lastName, email, password, isAdmin } = this.state;\r\n    try {\r\n      const res = await this.props.signupAction({\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        isAdmin,\r\n      });\r\n\r\n      if (res.data.ok) {\r\n        toast.success(res.data.message);\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      error.message.split(\", \").forEach((err) => toast.error(err));\r\n      // toast.error(error.message);\r\n    } finally {\r\n      this.setState(initialLocalState());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className=\"wrapper\">\r\n            <h1 className=\"page-title\">Регистрация</h1>\r\n            <form className=\"form\" onSubmit={this.sendReq}>\r\n              <label className=\"label\">\r\n                Имя\r\n                <input\r\n                  className=\"input\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </label>\r\n\r\n              <label className=\"label\">\r\n                Фамилия\r\n                <input\r\n                  className=\"input\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </label>\r\n\r\n              <label className=\"label\">\r\n                Email\r\n                <input\r\n                  className=\"input\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </label>\r\n\r\n              <label className=\"label\">\r\n                Пароль\r\n                <input\r\n                  className=\"input\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </label>\r\n              <label className=\"label\">\r\n                Повторите пароль\r\n                <input\r\n                  className=\"input\"\r\n                  name=\"repeatPassword\"\r\n                  type=\"password\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </label>\r\n              <label className=\"label\">\r\n                Зарегестироваться как:\r\n                <select\r\n                  className=\"input\"\r\n                  value={this.state.role}\r\n                  onChange={this.handleSelect}\r\n                >\r\n                  <option value=\"user\">Пользователь</option>\r\n                  <option value=\"admin\">Админ</option>\r\n                </select>\r\n              </label>\r\n              <button type=\"submit\" className=\"btn\">\r\n                Зарегистрироваться\r\n              </button>\r\n              {/* <button onClick={this.sendReq} type=\"button\" className=\"btn\">\r\n                Зарегистрироваться\r\n              </button> */}\r\n              <p className=\"form__paragraph\">\r\n                Уже зарегистрированы?\r\n                <Link className=\"form__link\" to=\"login\">\r\n                  {\" \"}\r\n                  Войдите в систему\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loading: state.apiCallsInProgress > 0,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  signupAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Signup));\r\n","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      {props.loggedInFlag && (\n        <button onClick={props.handleClick} className=\"btn\">\n          Выйти\n        </button>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { checkRoutes } from \"./routes\";\nimport { logoutAction } from \"./redux/actions/authActions\";\nimport Header from \"./components/Header\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App(props) {\n  const routes = checkRoutes(props.loggedIn);\n\n  return (\n    <div className=\"main\">\n      <Header loggedInFlag={props.loggedIn} handleClick={props.logoutAction} />\n      <Router>{routes}</Router>\n      <ToastContainer autoClose={3000} hideProgressBar />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loggedIn: state.loggedIn,\n  };\n}\n\nconst mapDispatchToProps = {\n  logoutAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\n\r\nexport function checkRoutes(loggedIn) {\r\n  if (loggedIn) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/profile\" exact>\r\n          <Profile />\r\n        </Route>\r\n        <Redirect to=\"/profile\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" exact>\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/signup\" exact>\r\n        <Signup />\r\n      </Route>\r\n      <Redirect to=\"signup\" />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\nimport App from \"./App\";\nimport \"./style/index.css\";\n\n// Проверяем localStorage, есть ли там токен и передаем initialState в Redux store.\n// Если есть, отправляем пользователя в профиль.\n// Если нет, отправляем пользователя на стр. регистрации.\nconst userData = JSON.parse(localStorage.getItem(\"userData\"));\nconst initialState = userData\n  ? { loggedIn: true, userData, apiCallsInProgress: 0 }\n  : { loggedIn: false, userData: null, apiCallsInProgress: 0 };\n\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}